##
#
# Copyright 2024 Liang-Jun Zhu <zlj@lreis.ac.cn>
#

# Use continuumio/miniconda3 as the build and test container, which is based on debian:12.5-slim
# https://github.com/ContinuumIO/docker-images/blob/main/miniconda3/debian/Dockerfile
FROM --platform=$BUILDPLATFORM continuumio/miniconda3 as builder

LABEL maintainer="Liang-Jun Zhu <zlj@lreis.ac.cn>"

# Copy source directory
WORKDIR /seims
COPY CMakeLists.txt .
COPY cmake cmake
COPY seims seims

RUN apt-get update -q && \
    apt-get install -q -y --no-install-recommends cmake make g++ \
    gdal-bin openmpi-bin libgdal-dev libopenmpi-dev \
    libmongoc-1.0-0 libmongoc-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

ARG INSTALL_DIR=/seims/dist
RUN cd /seims \
    && mkdir build \
    && cd build \
    && cmake .. -DCMAKE_BUILD_TYPE=Release -DINSTALL_PREFIX=${INSTALL_DIR} \
    && make -j 8 \
    && make install -j 8 \
    && cd ..

## Build final image
FROM continuumio/miniconda3 as runner

# Copy source directory
WORKDIR /seims
COPY seims seims
COPY docker docker

# Create new conda environment for pyseims
# Refers to https://pythonspeed.com/articles/activate-conda-dockerfile/
RUN conda env create -f ./seims/pyseims_env.yml

# Make RUN commands use the new environment:
SHELL ["conda", "run", "--no-capture-output", "-n", "pyseims", "/bin/bash", "-c"]

RUN apt-get update -q && \
    apt-get install -q -y --no-install-recommends \
    gdal-bin openmpi-bin libgomp1 tini libmongoc-1.0-0 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Order layers starting with less frequently varying ones
ARG INSTALL_DIR=/seims/dist
COPY --from=builder ${INSTALL_DIR}/bin/ /usr/local/bin/
COPY --from=builder ${INSTALL_DIR}/include/ /usr/local/include/
COPY --from=builder ${INSTALL_DIR}/lib/ /usr/local/lib/
COPY --from=builder ${INSTALL_DIR}/share/ /usr/local/share/

ENV OMPI_ALLOW_RUN_AS_ROOT=1
ENV OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1

COPY docker/docker-entrypoint.sh /
WORKDIR /seims/seims
ENTRYPOINT ["/usr/bin/tini", "--", "/docker-entrypoint.sh"]
